class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
         int n = nums.size();
        std::vector<int> leftProducts(n, 1);
        std::vector<int> rightProducts(n, 1);
        std::vector<int> result(n, 1);

        // Calculate the product of all elements to the left of each element
        int leftProduct = 1;
        for (int i = 1; i < n; ++i) {
            leftProduct *= nums[i - 1];
            leftProducts[i] = leftProduct;
        }

        // Calculate the product of all elements to the right of each element
        int rightProduct = 1;
        for (int i = n - 2; i >= 0; --i) {
            rightProduct *= nums[i + 1];
            rightProducts[i] = rightProduct;
        }

        for (int i = 0; i < n; ++i) {
            result[i] = leftProducts[i] * rightProducts[i];
        }

        return result;
   
    }
};
